{
    "collab_server" : "",
    "contents" : "#' @title Parse (logical)\n#'\n#' @description Tests whether a sequence of transitions can be fired by a Petri Net. If so returns TRUE, otherwise FALSE.\n#'\n#' @param PN A Petri Net\n#' @param trace A sequence of transitions, stored in a vector.\n#'\n#' @export parsel\n\n\n\nparsel <- function(PN, trace) {\n\tfor(i in 1:length(trace)) {\n\t\tif(trace[i] %in% enabled(PN)$id){\n\t\t\tPN <- execute(PN, trace[i])\n\t\t}\n\t\telse{\n\t\t\treturn(FALSE)\n\t\t}\n\t}\n\treturn(TRUE)\n}\n",
    "created" : 1475510412102.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "769680382",
    "id" : "1E79D838",
    "lastKnownWriteTime" : 1471508189,
    "last_content_update" : 1471508189,
    "path" : "C:/Users/lucp8407/Google Drive/My UH/R workspace/petrinetR/R/parsel.R",
    "project_path" : "R/parsel.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}